package br.tcc.Interface;

import br.tcc.ConsultaSimples.ConsultaCliente;
import br.tcc.ConsultaSimples.ConsultaFormaPgto;
import br.tcc.ConsultaSimples.ConsultaFornecedor;
import br.tcc.ConsultaSimples.ConsultaProduto;
import br.tcc.ConsultaSimples.ConsultaProdutoCompVend;
import br.tcc.ConsultaSimples.ConsultaTpMovto;
import br.tcc.Validacoes.LimparCampos;
import br.tcc.Validacoes.PreencherJtableGenerico;
import br.tcc.Validacoes.RetornaDataAtual;
import br.tcc.classe.Compra;
import br.tcc.classe.ContasPagar;
import br.tcc.classe.ContasReceber;
import br.tcc.classe.FormaPgto;
import br.tcc.classe.ItensCompra;
import br.tcc.classe.ItensVenda;
import br.tcc.classe.MovtoProduto;
import br.tcc.classe.TipoMovto;
import br.tcc.classe.Venda;
import br.tcc.dao.CompraDAO;
import br.tcc.dao.ContasPagarDAO;
import br.tcc.dao.ContasReceberDAO;
import br.tcc.dao.FormaPgtoDAO;
import br.tcc.dao.ItensCompraDAO;
import br.tcc.dao.ItensVendaDAO;
import br.tcc.dao.MovtoProdutoDAO;
import br.tcc.dao.TpMovtoDAO;
import br.tcc.dao.VendaDAO;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JOÃO PAULO
 */
public class InterfaceCompraVenda extends javax.swing.JFrame {
    
    LimparCampos lcampos = new LimparCampos();
    Integer situacao = 0;
    TpMovtoDAO tpMovtoDAO = new TpMovtoDAO();
    TipoMovto tpMovto = new TipoMovto();
    RetornaDataAtual retornadata = new RetornaDataAtual();
    Compra compra = new Compra();
    CompraDAO compraDAO = new CompraDAO();
    Venda venda = new Venda();
    VendaDAO vendaDAO = new VendaDAO();
    ItensCompra itensCompra = new ItensCompra();
    ItensCompraDAO itensCompraDAO = new ItensCompraDAO();
    ItensVenda itensVenda = new ItensVenda();
    ItensVendaDAO itensVendaDAO = new ItensVendaDAO();
    FormaPgto formaPgto = new FormaPgto();
    FormaPgtoDAO formaPgtoDAO = new FormaPgtoDAO();
    ContasPagar contasPagar = new ContasPagar();
    ContasPagarDAO contasPagarDAO = new ContasPagarDAO();
    ContasReceber contasReceber = new ContasReceber();
    ContasReceberDAO contasReceberDAO = new ContasReceberDAO();
    MovtoProduto movtoProduto = new MovtoProduto();
    MovtoProdutoDAO movtoProdutoDAO = new MovtoProdutoDAO();
    public String retornaId = "";

    /**
     * Creates new form InterfaceVenda
     */
    public InterfaceCompraVenda() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jFTFdt_cadastro = new javax.swing.JFormattedTextField();
        jPanelbotoes1 = new javax.swing.JPanel();
        jBincluir1 = new javax.swing.JButton();
        jBAlterar1 = new javax.swing.JButton();
        jBexcluir1 = new javax.swing.JButton();
        jBgravar1 = new javax.swing.JButton();
        jBcancelar1 = new javax.swing.JButton();
        jTPVenda = new javax.swing.JTabbedPane();
        jPCadastro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFIdVenda = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFIdCliente = new javax.swing.JTextField();
        jBPesquisarCliente = new javax.swing.JButton();
        jTFDsCliente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTFIdProduto = new javax.swing.JTextField();
        jBPesquisarProduto = new javax.swing.JButton();
        jTFDsProduto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTFVlProduto = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTFQuantidade = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTFVlTotal = new javax.swing.JTextField();
        jBAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTVenda = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jTFVlTotalVenda = new javax.swing.JTextField();
        jPanelbotoes2 = new javax.swing.JPanel();
        jBIncluir = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBGravar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBOrcamento = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jTFIdFornecedor = new javax.swing.JTextField();
        jBPesquisarfornecedor = new javax.swing.JButton();
        jTFDsfornecedor = new javax.swing.JTextField();
        jTFIdFormaPgto = new javax.swing.JTextField();
        jBPesquisarformaPgto = new javax.swing.JButton();
        jTFDsforma = new javax.swing.JTextField();
        jTFData = new javax.swing.JTextField();
        jTFDsTpMovto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTFIdTpMovto = new javax.swing.JTextField();
        jBPesquisarTpMovto = new javax.swing.JButton();
        jPConsulta = new javax.swing.JPanel();
        jCbPesquisa2 = new javax.swing.JComboBox();
        jTFPesquisa = new javax.swing.JTextField();
        jBPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTContasPagar = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTCompra = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTItensCompra = new javax.swing.JTable();
        jPConsulta1 = new javax.swing.JPanel();
        jCbPesquisa3 = new javax.swing.JComboBox();
        jTFPesquisa1 = new javax.swing.JTextField();
        jBPesquisar1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTvenda = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTItensVenda = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTContasreceber = new javax.swing.JTable();

        jLabel5.setText("Data de Alteração");

        try {
            jFTFdt_cadastro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jPanelbotoes1.setBackground(new java.awt.Color(153, 153, 153));

        jBincluir1.setText("Incluir");
        jBincluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBincluir1ActionPerformed(evt);
            }
        });

        jBAlterar1.setText("Alterar");

        jBexcluir1.setText("Excluir");

        jBgravar1.setText("Gravar");
        jBgravar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBgravar1ActionPerformed(evt);
            }
        });

        jBcancelar1.setText("Cancelar");

        javax.swing.GroupLayout jPanelbotoes1Layout = new javax.swing.GroupLayout(jPanelbotoes1);
        jPanelbotoes1.setLayout(jPanelbotoes1Layout);
        jPanelbotoes1Layout.setHorizontalGroup(
            jPanelbotoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelbotoes1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBincluir1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBAlterar1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jBexcluir1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBgravar1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jBcancelar1)
                .addContainerGap())
        );
        jPanelbotoes1Layout.setVerticalGroup(
            jPanelbotoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelbotoes1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanelbotoes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBincluir1, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jBAlterar1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBexcluir1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBgravar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBcancelar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Venda");

        jTPVenda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTPVendaFocusLost(evt);
            }
        });

        jLabel1.setText("Código");

        jLabel2.setText("Cliente");

        jBPesquisarCliente.setText("Pesquisar");
        jBPesquisarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPesquisarClienteMouseClicked(evt);
            }
        });

        jLabel4.setText("Forma Pgto");

        jLabel6.setText("Data de Venda");

        jLabel12.setText("Codigo do Produto");

        jBPesquisarProduto.setText("Pesquisar");
        jBPesquisarProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPesquisarProdutoMouseClicked(evt);
            }
        });
        jBPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarProdutoActionPerformed(evt);
            }
        });

        jLabel11.setText("Valor da unidade");

        jLabel13.setText("Quantidade");

        jTFQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFQuantidadeFocusLost(evt);
            }
        });

        jLabel14.setText("Valor Total");

        jBAdicionar.setText("Adicionar");
        jBAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdicionarActionPerformed(evt);
            }
        });

        jTVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Valor", "Quantidade", "Valor total"
            }
        ));
        jScrollPane1.setViewportView(jTVenda);

        jLabel15.setText("Valor total");

        jPanelbotoes2.setBackground(new java.awt.Color(153, 153, 153));
        jPanelbotoes2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBIncluir.setText("Incluir");
        jBIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIncluirActionPerformed(evt);
            }
        });
        jPanelbotoes2.add(jBIncluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 70, 30));

        jBAlterar.setText("Alterar");
        jBAlterar.setMaximumSize(new java.awt.Dimension(65, 30));
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });
        jPanelbotoes2.add(jBAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 70, 30));

        jBExcluir.setText("Excluir");
        jPanelbotoes2.add(jBExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 70, 30));

        jBGravar.setText("Concluir");
        jBGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGravarActionPerformed(evt);
            }
        });
        jPanelbotoes2.add(jBGravar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 80, 30));

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });
        jPanelbotoes2.add(jBCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, -1, 30));

        jBOrcamento.setText("Orçamento");
        jBOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOrcamentoActionPerformed(evt);
            }
        });
        jPanelbotoes2.add(jBOrcamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 100, 30));

        jLabel16.setText("Fornecedor");

        jBPesquisarfornecedor.setText("Pesquisar");
        jBPesquisarfornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPesquisarfornecedorMouseClicked(evt);
            }
        });

        jBPesquisarformaPgto.setText("Pesquisar");
        jBPesquisarformaPgto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPesquisarformaPgtoMouseClicked(evt);
            }
        });

        jLabel7.setText("Tipo de Movimentpo");

        jBPesquisarTpMovto.setText("Pesquisar");
        jBPesquisarTpMovto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPesquisarTpMovtoMouseClicked(evt);
            }
        });
        jBPesquisarTpMovto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarTpMovtoActionPerformed(evt);
            }
        });
        jBPesquisarTpMovto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jBPesquisarTpMovtoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPCadastroLayout = new javax.swing.GroupLayout(jPCadastro);
        jPCadastro.setLayout(jPCadastroLayout);
        jPCadastroLayout.setHorizontalGroup(
            jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCadastroLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFIdFormaPgto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisarformaPgto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFDsforma, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelbotoes2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCadastroLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTFVlTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPCadastroLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTFIdVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTFData, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(77, 77, 77))
                                .addGroup(jPCadastroLayout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTFVlProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTFQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTFVlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBAdicionar)
                                    .addGap(41, 41, 41))
                                .addGroup(jPCadastroLayout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTFIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBPesquisarProduto)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTFDsProduto)))))
                    .addGroup(jPCadastroLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFIdFornecedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisarfornecedor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFDsfornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCadastroLayout.createSequentialGroup()
                        .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTFIdTpMovto))
                            .addGroup(jPCadastroLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFIdCliente)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBPesquisarCliente, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBPesquisarTpMovto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTFDsTpMovto, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                            .addComponent(jTFDsCliente))))
                .addGap(37, 37, 37))
        );
        jPCadastroLayout.setVerticalGroup(
            jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFIdVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTFData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTFIdTpMovto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFDsTpMovto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisarTpMovto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisarCliente)
                    .addComponent(jTFDsCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTFIdFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisarfornecedor)
                    .addComponent(jTFDsfornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFIdFormaPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisarformaPgto)
                    .addComponent(jTFDsforma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTFIdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisarProduto)
                    .addComponent(jTFDsProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTFVlProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jTFQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jTFVlTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAdicionar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTFVlTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelbotoes2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTPVenda.addTab("Cadastro", jPCadastro);

        jCbPesquisa2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Cliente" }));

        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        jTContasPagar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Numero daParcela", "Data Pagamento", "Valor a Pagar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTContasPagar.setToolTipText("");
        jTContasPagar.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTContasPagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTContasPagarMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTContasPagar);

        jTCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data da Compra", "Fornecedor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTCompra.setToolTipText("");
        jTCompra.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTCompraMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTCompra);

        jTItensCompra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Quantidade", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTItensCompra.setToolTipText("");
        jTItensCompra.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTItensCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTItensCompraMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTItensCompra);

        javax.swing.GroupLayout jPConsultaLayout = new javax.swing.GroupLayout(jPConsulta);
        jPConsulta.setLayout(jPConsultaLayout);
        jPConsultaLayout.setHorizontalGroup(
            jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2)
                    .addGroup(jPConsultaLayout.createSequentialGroup()
                        .addComponent(jCbPesquisa2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTFPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisar)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPConsultaLayout.setVerticalGroup(
            jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConsultaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbPesquisa2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTPVenda.addTab("Consulta Compra", jPConsulta);

        jCbPesquisa3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Geral", "Cliente" }));

        jBPesquisar1.setText("Pesquisar");
        jBPesquisar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisar1ActionPerformed(evt);
            }
        });

        jTvenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data da Venda", "Cliente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTvenda.setToolTipText("");
        jTvenda.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTvenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTvendaMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTvenda);

        jTItensVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Quantidade", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTItensVenda.setToolTipText("");
        jTItensVenda.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTItensVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTItensVendaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTItensVenda);

        jTContasreceber.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Numero daParcela", "Data Recebimento", "Valor a Receber"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTContasreceber.setToolTipText("");
        jTContasreceber.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTContasreceber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTContasreceberMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTContasreceber);

        javax.swing.GroupLayout jPConsulta1Layout = new javax.swing.GroupLayout(jPConsulta1);
        jPConsulta1.setLayout(jPConsulta1Layout);
        jPConsulta1Layout.setHorizontalGroup(
            jPConsulta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsulta1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConsulta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7)
                    .addComponent(jScrollPane5)
                    .addGroup(jPConsulta1Layout.createSequentialGroup()
                        .addComponent(jCbPesquisa3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTFPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisar1))
                    .addComponent(jScrollPane6))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPConsulta1Layout.setVerticalGroup(
            jPConsulta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPConsulta1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPConsulta1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCbPesquisa3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFPesquisa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTPVenda.addTab("Consulta Venda", jPConsulta1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTPVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 702, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTPVenda)
        );

        setSize(new java.awt.Dimension(718, 561));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBincluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBincluir1ActionPerformed

    }//GEN-LAST:event_jBincluir1ActionPerformed

    private void jBgravar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBgravar1ActionPerformed

    }//GEN-LAST:event_jBgravar1ActionPerformed

    private void jBIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIncluirActionPerformed
        
        lcampos.LimparCampos(jTPVenda);
        situacao = 1;
        estadobotoes(true);
        retornadata.RetornaDataAtual(jTFData);
        jTFVlTotalVenda.setText("0.0");
    }//GEN-LAST:event_jBIncluirActionPerformed

    private void jBGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGravarActionPerformed
        
        tpMovto.setIDTPMOVTO(Integer.parseInt(jTFIdTpMovto.getText()));
        tpMovtoDAO.VerificarOperacao(tpMovto);
        if (!tpMovto.getTPMOVTO().toString().equals("E")) {
            jTFIdFornecedor.setEnabled(false);
            jTFDsfornecedor.setEnabled(false);
            jBPesquisarfornecedor.setEnabled(false);
            if (tpMovto.getMOVESTOQUE().toString().equals("S")) {
                if (tpMovto.getMOVFINANCEIRO().toString().equals("S")) {
                    
                    if (jTFIdCliente.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Código do Cliente é obrigatório");
                    } else {
                        venda.setIDCLIENTE(Integer.parseInt(jTFIdCliente.getText()));
                    }
                    if (jTFData.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Data é um campo obrigatório");
                    } else {
                        venda.setDTVENDA(jTFData.getText());
                    }
                    if (jTFIdFormaPgto.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "Código da Forma de Pagamento é Obrigatório");
                    } else {
                        venda.setIDFORMAPGTO(Integer.parseInt(jTFIdFormaPgto.getText()));
                    }
                    venda.setIDMOVTOPRODUTO(tpMovto.getIDTPMOVTO());
                    
                    vendaDAO.incluir(venda);
                    
                    Integer idV = null;
                    try {
                        idV = vendaDAO.retornaUltimoId(idV);
                    } catch (SQLException ex) {
                        Logger.getLogger(InterfaceCompraVenda.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    int totlinha = jTVenda.getRowCount();
                    int conta = 0;

                    //VERIFICAR SE HÁ QUANTIDADE SUFICIENTE
                    for (int i = 1; i <= totlinha; i++) {
                        String IdProd = (String) jTVenda.getValueAt(conta, 0);
                        String vlProduto = (String) jTVenda.getValueAt(conta, 2);
                        String QtdProd = (String) jTVenda.getValueAt(conta, 3);
                        itensVenda.setIDVENDA(idV);
                        itensVenda.setIDPRODUTO(Integer.parseInt(IdProd));
                        itensVenda.setVLPRODUTO(Double.parseDouble(vlProduto));
                        itensVenda.setQTDPRODUTO(Integer.parseInt(QtdProd));
                        conta = conta + 1;
                        itensVendaDAO.incluir(itensVenda);
                    }
                    
                    formaPgto.setIDFORMAPGTO(Integer.parseInt(jTFIdFormaPgto.getText()));
                    formaPgtoDAO.retornadados(formaPgto);
                    
                    Integer IntervaloPgto = formaPgto.getNRINTERVALO();
                    Integer QtdParcelas = formaPgto.getQTDPARCELA();
                    
                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                    Calendar calend = new GregorianCalendar();
                    
                    Double Vltotal = Double.parseDouble(jTFVlTotalVenda.getText());
                    Double VlParcela = (Vltotal / QtdParcelas);
                    
                    for (int i = 1; i <= QtdParcelas; i++) {
                        calend.add(Calendar.DAY_OF_MONTH, IntervaloPgto);
                        String datanova = sdf.format(calend.getTime());
                        
                        contasReceber.setIDVENDA(idV);
                        contasReceber.setDTRECEBER(datanova);
                        
                        contasReceber.setVLRECEBER(VlParcela);
                        contasReceber.setIDPARCELA(i);
                        contasReceber.setPAGO("N");
                        
                        contasReceberDAO.incluir(contasReceber);
                    }
                    
                    conta = 0;
                    
                    for (int i = 1; i <= totlinha; i++) {
                        String IdItenVenda = (String) jTVenda.getValueAt(conta, 0);
                        String QtdProd = (String) jTVenda.getValueAt(conta, 3);
                        
                        movtoProduto.setIDCOMPRA(idV);
                        
                        movtoProduto.setQTDPRODUTO(Integer.parseInt(QtdProd));
                        movtoProduto.setINENTRADA("N");
                        movtoProduto.setDTATUALIZA(jTFData.getText());
                        
                        conta = conta + 1;
                        movtoProdutoDAO.JaExiste(movtoProduto, Integer.parseInt(IdItenVenda));
                        Integer id = movtoProduto.getIDITENCOMPRA();
                        Integer idMvto = movtoProduto.getIDMOVTOPRODUTO();
                        Integer qtd = movtoProduto.getQTDPRODUTO();
                        String ids = String.valueOf(id);
                        String idsiten = String.valueOf(IdItenVenda);
                        if (ids.equals(idsiten)) {
                            movtoProduto.setIDMOVTOPRODUTO(idMvto);
                            movtoProduto.setIDITENCOMPRA(Integer.parseInt(IdItenVenda));
                            qtd = qtd - Integer.parseInt(QtdProd);
                            movtoProduto.setQTDPRODUTO(qtd);
                            movtoProdutoDAO.incluir(movtoProduto);
                            
                        } else {
                            JOptionPane.showMessageDialog(null, "Produto não existe!");
                        }
                    }
                    
                }
            }
            
        } else {
            jTFIdCliente.setEnabled(false);
            jTFDsCliente.setEnabled(false);
            jBPesquisarCliente.setVisible(false);
            
            if (jTFIdFornecedor.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Código do Fornecedor é obrigatório");
            } else {
                compra.setIDFORNECEDOR(Integer.parseInt(jTFIdFornecedor.getText()));
            }
            if (jTFData.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Data é um campo obrigatório");
            } else {
                compra.setDTVENDA(jTFData.getText());
            }
            if (jTFIdFormaPgto.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Código da Forma de Pagamento é Obrigatório");
            } else {
                compra.setIDFORMAPGTO(Integer.parseInt(jTFIdFormaPgto.getText()));
            }
            compraDAO.incluir(compra);
            
            Integer idV = null;
            try {
                idV = compraDAO.retornaUltimoId(idV);
            } catch (SQLException ex) {
                Logger.getLogger(InterfaceCompraVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
            int totlinha = jTVenda.getRowCount();
            int conta = 0;
            for (int i = 1; i <= totlinha; i++) {
                String IdProd = (String) jTVenda.getValueAt(conta, 0);
                String vlProduto = (String) jTVenda.getValueAt(conta, 2);
                String QtdProd = (String) jTVenda.getValueAt(conta, 3);
                itensCompra.setIDCOMPRA(idV);
                itensCompra.setIDPRODUTO(Integer.parseInt(IdProd));
                itensCompra.setVLPRODUTO(Double.parseDouble(vlProduto));
                itensCompra.setQTDPRODUTO(Integer.parseInt(QtdProd));
                conta = conta + 1;
                itensCompraDAO.incluir(itensCompra);
            }
            
            formaPgto.setIDFORMAPGTO(Integer.parseInt(jTFIdFormaPgto.getText()));
            formaPgtoDAO.retornadados(formaPgto);
            
            Integer IntervaloPgto = formaPgto.getNRINTERVALO();
            Integer QtdParcelas = formaPgto.getQTDPARCELA();
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Calendar calend = new GregorianCalendar();
            
            Double Vltotal = Double.parseDouble(jTFVlTotalVenda.getText());
            Double VlParcela = (Vltotal / QtdParcelas);
            
            for (int i = 1; i <= QtdParcelas; i++) {
                calend.add(Calendar.DAY_OF_MONTH, IntervaloPgto);
                String datanova = sdf.format(calend.getTime());
                
                contasPagar.setIDCOMRPA(idV);
                contasPagar.setDTPAGAR(datanova);
                
                contasPagar.setVLPAGAR(VlParcela);
                contasPagar.setIDPARCELA(i);
                contasPagar.setPAGO("N");
                
                contasPagarDAO.incluir(contasPagar);
            }
            
            conta = 0;
            
            for (int i = 1; i <= totlinha; i++) {
                String IdItenCompra = (String) jTVenda.getValueAt(conta, 0);
                String QtdProd = (String) jTVenda.getValueAt(conta, 3);
                
                movtoProduto.setIDCOMPRA(idV);
                
                movtoProduto.setQTDPRODUTO(Integer.parseInt(QtdProd));
                movtoProduto.setINENTRADA("S");
                movtoProduto.setDTATUALIZA(jTFData.getText());
                
                conta = conta + 1;
                movtoProdutoDAO.JaExiste(movtoProduto, Integer.parseInt(IdItenCompra));
                Integer id = movtoProduto.getIDITENCOMPRA();
                Integer idMvto = movtoProduto.getIDMOVTOPRODUTO();
                Integer qtd = movtoProduto.getQTDPRODUTO();
                String ids = String.valueOf(id);
                String idsiten = String.valueOf(IdItenCompra);
                if (ids.equals(idsiten)) {
                    movtoProduto.setIDMOVTOPRODUTO(idMvto);
                    movtoProduto.setIDITENCOMPRA(Integer.parseInt(IdItenCompra));
                    qtd = qtd + Integer.parseInt(QtdProd);
                    movtoProduto.setQTDPRODUTO(qtd);
                    movtoProdutoDAO.alterar(movtoProduto);
                    
                } else {
                    movtoProduto.setIDITENCOMPRA(Integer.parseInt(IdItenCompra));
                    movtoProdutoDAO.incluir(movtoProduto);
                }
            }
            
            lcampos.LimparCampos(jPCadastro);
        }

    }//GEN-LAST:event_jBGravarActionPerformed

    private void jBPesquisarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPesquisarClienteMouseClicked
        final ConsultaCliente retornaCliente = new ConsultaCliente();
        retornaCliente.setVisible(true);
        retornaCliente.addWindowListener(new java.awt.event.WindowAdapter() {
            
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jTFIdCliente.setText(retornaCliente.retornaId);
                jTFDsCliente.setText(retornaCliente.retornaDsCliente);
            }
        });
    }//GEN-LAST:event_jBPesquisarClienteMouseClicked

    private void jBPesquisarProdutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPesquisarProdutoMouseClicked
        
        tpMovto.setIDTPMOVTO(Integer.parseInt(jTFIdTpMovto.getText()));
        tpMovtoDAO.VerificarOperacao(tpMovto);
        if (!tpMovto.getTPMOVTO().equals("E")) {
            final ConsultaProdutoCompVend retornaProduto = new ConsultaProdutoCompVend();
            retornaProduto.setVisible(true);
            retornaProduto.addWindowListener(new java.awt.event.WindowAdapter() {
                
                public void windowClosed(java.awt.event.WindowEvent evt) {
                    jTFIdProduto.setText(retornaProduto.retornaId);
                    jTFDsProduto.setText(retornaProduto.retornaDsProduto);
                    jTFVlProduto.setText(retornaProduto.retonaVlProduto);
                }
            });
        } else {
            final ConsultaProduto retornaProduto = new ConsultaProduto();
            retornaProduto.setVisible(true);
            retornaProduto.addWindowListener(new java.awt.event.WindowAdapter() {
                
                public void windowClosed(java.awt.event.WindowEvent evt) {
                    jTFIdProduto.setText(retornaProduto.retornaId);
                    jTFDsProduto.setText(retornaProduto.retornaDsProduto);
                    jTFVlProduto.setText(retornaProduto.retonaVlProduto);
                }
            });
            
        }
    }//GEN-LAST:event_jBPesquisarProdutoMouseClicked

    private void jBPesquisarfornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPesquisarfornecedorMouseClicked
        
        final ConsultaFornecedor retornaFornecedor = new ConsultaFornecedor();
        retornaFornecedor.setVisible(true);
        retornaFornecedor.addWindowListener(new java.awt.event.WindowAdapter() {
            
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jTFIdFornecedor.setText(retornaFornecedor.retornaId);
                jTFDsfornecedor.setText(retornaFornecedor.retornaDsFornecedor);
            }
        });
    }//GEN-LAST:event_jBPesquisarfornecedorMouseClicked

    private void jBPesquisarformaPgtoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPesquisarformaPgtoMouseClicked
        final ConsultaFormaPgto retornaPgto = new ConsultaFormaPgto();
        retornaPgto.setVisible(true);
        retornaPgto.addWindowListener(new java.awt.event.WindowAdapter() {
            
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jTFIdFormaPgto.setText(retornaPgto.retornaId);
                jTFDsforma.setText(retornaPgto.retornaDsForma);
            }
        });
    }//GEN-LAST:event_jBPesquisarformaPgtoMouseClicked

    private void jTFQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFQuantidadeFocusLost
        Double preco = 0.0;
        int qtd = 0;
        
        preco = Double.parseDouble(jTFVlProduto.getText());
        qtd = Integer.parseInt(jTFQuantidade.getText());
        
        jTFVlTotal.setText(String.valueOf(preco * qtd));
    }//GEN-LAST:event_jTFQuantidadeFocusLost

    private void jBAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdicionarActionPerformed
        
        if (!jTFIdProduto.getText().equals("")) {
            if (!jTFDsProduto.getText().equals("")) {
                if (!jTFVlProduto.getText().equals("")) {
                    if (!jTFQuantidade.getText().equals("")) {
                        IncluirListaCompra();
                    } else {
                        JOptionPane.showMessageDialog(null, "Informe a Quantidade de produtos a ser comprados!");
                        jTFQuantidade.grabFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Valor do Produto não encontrado");
                    jTFVlProduto.grabFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Informe o nome do produto!");
                jTFDsProduto.grabFocus();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Informe o codigo do produto!");
            jTFIdProduto.grabFocus();
        }
        

    }//GEN-LAST:event_jBAdicionarActionPerformed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jTPVendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTPVendaFocusLost
        
        tpMovto.setIDTPMOVTO(Integer.parseInt(jTFIdTpMovto.getText()));
        tpMovtoDAO.VerificarOperacao(tpMovto);
        
        if (tpMovto.getTPMOVTO().toString().equals("E")) {
            jTFIdCliente.setEnabled(false);
            jTFDsCliente.setEnabled(false);
            
        } else {
            jTFIdFornecedor.setEnabled(false);
            jTFDsfornecedor.setEnabled(false);
        }
    }//GEN-LAST:event_jTPVendaFocusLost

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        

    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBPesquisarProdutoActionPerformed

    private void jBPesquisarTpMovtoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPesquisarTpMovtoMouseClicked
        
        final ConsultaTpMovto retornaTpMovto = new ConsultaTpMovto();
        retornaTpMovto.setVisible(true);
        retornaTpMovto.addWindowListener(new java.awt.event.WindowAdapter() {
            
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jTFIdTpMovto.setText(retornaTpMovto.retornaId);
                jTFDsTpMovto.setText(retornaTpMovto.retornaDsTpMovto);
            }
        });
    }//GEN-LAST:event_jBPesquisarTpMovtoMouseClicked

    private void jBPesquisarTpMovtoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBPesquisarTpMovtoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jBPesquisarTpMovtoKeyTyped

    private void jBPesquisarTpMovtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarTpMovtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBPesquisarTpMovtoActionPerformed

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        
        PreencherJtableGenerico preencher = new PreencherJtableGenerico();
        String cliente = jTFPesquisa.getText().toUpperCase();
        switch (jCbPesquisa2.getSelectedIndex()) {
            case 0: {
                compraDAO.consulta(compra);
                preencher.PreencherJtableGenerico(jTCompra, compra.getRetorno());
                return;
            }
            case 1: {
                compraDAO.consultacliente(compra, cliente);
                preencher.PreencherJtableGenerico(jTCompra, compra.getRetorno());
                return;
            }
        }
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void jTContasPagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTContasPagarMouseClicked

//        int linha = jTContasPagar.getSelectedRow();
//        retornaId = jTContasPagar.getValueAt(linha, 0).toString();
//        retornaDsProduto = jTContasPagar.getValueAt(linha, 1).toString();
//        retonaVlProduto = jTContasPagar.getValueAt(linha, 2).toString();

    }//GEN-LAST:event_jTContasPagarMouseClicked

    private void jTCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTCompraMouseClicked
        PreencherJtableGenerico preencher = new PreencherJtableGenerico();
        
        int linha = jTCompra.getSelectedRow();
        retornaId = jTCompra.getValueAt(linha, 0).toString();
        Integer idCompra = Integer.parseInt(retornaId);
        
        itensCompraDAO.consulta(itensCompra, idCompra);
        preencher.PreencherJtableGenerico(jTItensCompra, itensCompra.getRetorno());
        
        contasPagarDAO.consulta(contasPagar, idCompra);
        preencher.PreencherJtableGenerico(jTContasPagar, contasPagar.getRetorno());

    }//GEN-LAST:event_jTCompraMouseClicked

    private void jTItensCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTItensCompraMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTItensCompraMouseClicked

    private void jBPesquisar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisar1ActionPerformed
        
        PreencherJtableGenerico preencher = new PreencherJtableGenerico();
        String cliente = jTFPesquisa1.getText().toUpperCase();
        switch (jCbPesquisa3.getSelectedIndex()) {
            case 0: {
                vendaDAO.consulta(venda);
                preencher.PreencherJtableGenerico(jTvenda, venda.getRetorno());
                return;
            }
            case 1: {
                vendaDAO.consultacliente(venda, cliente);
                preencher.PreencherJtableGenerico(jTvenda, venda.getRetorno());
                return;
            }
        }
    }//GEN-LAST:event_jBPesquisar1ActionPerformed

    private void jTvendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTvendaMouseClicked
        PreencherJtableGenerico preencher = new PreencherJtableGenerico();
        
        int linha = jTvenda.getSelectedRow();
        retornaId = jTvenda.getValueAt(linha, 0).toString();
        Integer idVENDA = Integer.parseInt(retornaId);
        
        itensVendaDAO.consulta(itensVenda, idVENDA);
        preencher.PreencherJtableGenerico(jTItensVenda, itensVenda.getRetorno());
        
        contasReceberDAO.consulta(contasReceber, idVENDA);
        preencher.PreencherJtableGenerico(jTContasreceber, contasReceber.getRetorno());
        

    }//GEN-LAST:event_jTvendaMouseClicked

    private void jTItensVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTItensVendaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTItensVendaMouseClicked

    private void jTContasreceberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTContasreceberMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTContasreceberMouseClicked

    private void jBOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOrcamentoActionPerformed
        // criação do documento
        String data;
        Date date = new Date();
        String dt1 = String.valueOf(date.getDay());
        String dt2 = String.valueOf(date.getMonth());
        String dt3 = String.valueOf(date.getYear());
                
        data = String.valueOf(date.getTime() + dt1 + dt2 + dt3 );
        Document document = new Document();
        
        try {
            PdfWriter.getInstance(document, new FileOutputStream("D:\\rel\\" + data));
            document.open();

            // adicionando um parágrafo no documento
            Paragraph p = new Paragraph("Orçamento - Bella Flor Floricultura");
            p.setAlignment(1);
            document.add(p);
            p = new Paragraph("     ");
            document.add(p);
            String nome = null;
            if (jTFDsCliente.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "É obrigatório preencher os dados do Cliente");
                jTFDsCliente.grabFocus();
            } else {
                nome = jTFDsCliente.getText();
            }
            
            p = new Paragraph("Cliente: " + nome);
            document.add(p);
            
            String forma = null;
            if (jTFDsforma.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "É obrigatório preencher a forma de pagamento");
                jTFDsforma.grabFocus();
            } else {
                forma = jTFDsforma.getText();
            }
            p = new Paragraph("Forma de Pagamento: " + forma);
            document.add(p);
            
            String dataa = jTFData.getText();
            p = new Paragraph("Data do orçamento: " + dataa);
            document.add(p);
            
            p = new Paragraph("     ");
            document.add(p);
            
            PdfPTable table = new PdfPTable(4);
            
            PdfPCell cel1 = new PdfPCell(new Paragraph("Produto"));
            PdfPCell cel2 = new PdfPCell(new Paragraph("Valor"));
            PdfPCell cel3 = new PdfPCell(new Paragraph("Quantidade"));
            PdfPCell cel4 = new PdfPCell(new Paragraph("Total"));
            
            table.addCell(cel1);
            table.addCell(cel2);
            table.addCell(cel3);
            table.addCell(cel4);
            
            String produto = null;
            String valor = null;
            String quantidade = null;
            String total = null;
            
            DefaultTableModel ItensVenda = (DefaultTableModel) jTVenda.getModel();
            int totlinha = jTVenda.getRowCount();
            int conta = 0;
            
            for (int i = 1; i <= totlinha; i++) {
                produto = (String) jTVenda.getValueAt(conta, 1);
                valor = (String) jTVenda.getValueAt(conta, 2);
                quantidade = (String) jTVenda.getValueAt(conta, 3);
                total = (String) jTVenda.getValueAt(conta, 4);
                
               PdfPCell c1 = new PdfPCell(new Paragraph(produto));
               PdfPCell c2 = new PdfPCell(new Paragraph(valor));
               PdfPCell c3 = new PdfPCell(new Paragraph(quantidade));
               PdfPCell c4 = new PdfPCell(new Paragraph(total));
                
                table.addCell(c1);
                table.addCell(c2);
                table.addCell(c3);
                table.addCell(c4);
                
                
                conta = conta + 1;
            }
            document.add(table);
            p = new Paragraph("         ");
            document.add(p);
            String totalNota = jTFVlTotalVenda.getText();
            p = new Paragraph("Valor total do Orçamento: R$ " + totalNota);
            p.setAlignment(1);
            document.add(p);
            p = new Paragraph("Obs: Orçamento Valido por 30 dias");
            document.add(p);
            
        } catch (DocumentException | IOException de) {
            System.err.println(de.getMessage());
        }
        document.close();
        
        try {
            Desktop.getDesktop().open(new File("D:\\rel\\" + data));
        } catch (IOException ex) {
            Logger.getLogger(InterfaceCompraVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBOrcamentoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompraVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompraVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompraVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompraVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceCompraVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAdicionar;
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBAlterar1;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBGravar;
    private javax.swing.JButton jBIncluir;
    private javax.swing.JButton jBOrcamento;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JButton jBPesquisar1;
    private javax.swing.JButton jBPesquisarCliente;
    private javax.swing.JButton jBPesquisarProduto;
    private javax.swing.JButton jBPesquisarTpMovto;
    private javax.swing.JButton jBPesquisarformaPgto;
    private javax.swing.JButton jBPesquisarfornecedor;
    private javax.swing.JButton jBcancelar1;
    private javax.swing.JButton jBexcluir1;
    private javax.swing.JButton jBgravar1;
    private javax.swing.JButton jBincluir1;
    private javax.swing.JComboBox jCbPesquisa2;
    private javax.swing.JComboBox jCbPesquisa3;
    private javax.swing.JFormattedTextField jFTFdt_cadastro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPCadastro;
    private javax.swing.JPanel jPConsulta;
    private javax.swing.JPanel jPConsulta1;
    private javax.swing.JPanel jPanelbotoes1;
    private javax.swing.JPanel jPanelbotoes2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTCompra;
    private javax.swing.JTable jTContasPagar;
    private javax.swing.JTable jTContasreceber;
    private javax.swing.JTextField jTFData;
    private javax.swing.JTextField jTFDsCliente;
    private javax.swing.JTextField jTFDsProduto;
    private javax.swing.JTextField jTFDsTpMovto;
    private javax.swing.JTextField jTFDsforma;
    private javax.swing.JTextField jTFDsfornecedor;
    private javax.swing.JTextField jTFIdCliente;
    private javax.swing.JTextField jTFIdFormaPgto;
    private javax.swing.JTextField jTFIdFornecedor;
    private javax.swing.JTextField jTFIdProduto;
    private javax.swing.JTextField jTFIdTpMovto;
    private javax.swing.JTextField jTFIdVenda;
    private javax.swing.JTextField jTFPesquisa;
    private javax.swing.JTextField jTFPesquisa1;
    private javax.swing.JTextField jTFQuantidade;
    private javax.swing.JTextField jTFVlProduto;
    private javax.swing.JTextField jTFVlTotal;
    private javax.swing.JTextField jTFVlTotalVenda;
    private javax.swing.JTable jTItensCompra;
    private javax.swing.JTable jTItensVenda;
    private javax.swing.JTabbedPane jTPVenda;
    private javax.swing.JTable jTVenda;
    private javax.swing.JTable jTvenda;
    // End of variables declaration//GEN-END:variables

    private void estadobotoes(boolean situacao) {
        jBIncluir.setEnabled(!situacao);
        jBAlterar.setEnabled(!situacao);
        jBExcluir.setEnabled(!situacao);
        jBGravar.setEnabled(situacao);
        jBCancelar.setEnabled(situacao);
    }
    
    private void IncluirListaCompra() {
        
        DefaultTableModel ItensFornece = (DefaultTableModel) jTVenda.getModel();
        int totlinha = jTVenda.getRowCount();
        int incluir = 0;
        int conta = 0;
        int linha = 0;
        
        for (int i = 1; i <= totlinha; i++) {
            String IdProd = (String) jTVenda.getValueAt(conta, 0);
            
            if (jTFIdProduto.getText().equals(IdProd)) {
                int opcao_escolhida = JOptionPane.showConfirmDialog(null, "Produto ja"
                        + " foi incluido, deseja alterar quantidade? ", "Alteração ",
                        JOptionPane.YES_NO_OPTION);
                
                if (opcao_escolhida == JOptionPane.YES_OPTION) {
                    incluir = 1;
                    linha = conta;
                } else {
                    return;
                }
//            }
            }
            conta = conta + 1;
        }
        
        if (incluir == 0) {
            Double totalVenda = Double.parseDouble(jTFVlTotalVenda.getText());
            Double vltotal = Double.parseDouble(jTFVlTotal.getText());
            String soma = String.valueOf(totalVenda + vltotal);
            jTFVlTotalVenda.setText(soma);
            
            ItensFornece.setNumRows(totlinha + 1);
            ItensFornece.setValueAt(jTFIdProduto.getText(), totlinha, 0);
            ItensFornece.setValueAt(jTFDsProduto.getText(), totlinha, 1);
            ItensFornece.setValueAt(jTFVlProduto.getText(), totlinha, 2);
            ItensFornece.setValueAt(jTFQuantidade.getText(), totlinha, 3);
            ItensFornece.setValueAt(jTFVlTotal.getText(), totlinha, 4);
            
            jTFIdProduto.setText("");
            jTFDsProduto.setText("");
            jTFVlProduto.setText("");
            jTFQuantidade.setText("");
            jTFVlTotal.setText("");
        } else if (incluir == 1) {
            
            Double totalVenda = Double.parseDouble(jTFVlTotalVenda.getText());
            Double vltotal = Double.parseDouble(jTFVlTotal.getText());
            String soma = String.valueOf(totalVenda + vltotal);
            jTFVlTotalVenda.setText(soma);
            
            String quantidade = (String) jTVenda.getValueAt(linha, 3);
            String vltot = (String) jTVenda.getValueAt(linha, 4);
            
            Integer quantidadeAtual = Integer.parseInt(quantidade) + Integer.parseInt(jTFQuantidade.getText());
            Double vltotalAtual = Double.parseDouble(vltot) + Double.parseDouble(jTFVlTotal.getText());
            
            jTVenda.setValueAt(quantidadeAtual, linha, 3);
            jTVenda.setValueAt(vltotalAtual, linha, 4);
            
            jTFIdProduto.setText("");
            jTFDsProduto.setText("");
            jTFQuantidade.setText("");
            jTFVlTotal.setText("");
            jTFVlProduto.setText("");
            
        }
    }
}
